/**Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree,
construct and return the binary tree.

Input: inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]
Output: [3,9,20,null,null,15,7]


   3
  / \
 9   20
     / \
    15  7
    
    
**/    
    







class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return helper(0,inorder.length-1,0,postorder.length-1,inorder,postorder);
        
    }
    public TreeNode helper(int inStart,  int inEnd, int posStart, int posEnd, int[] inOrder, int[] postOrder){
        if(inStart>inEnd ||posStart>posEnd){
            return null;
        }
        TreeNode root=new TreeNode(postOrder[posEnd]);
        int inIndex=0;
        for(int i=inStart;i<=inEnd;i++){
            if(root.val==inOrder[i]){
                inIndex=i;
            }
        }
        root.left=helper(inStart,inIndex-1,posStart,posStart+inIndex-inStart-1,inOrder,postOrder);
        root.right=helper(inIndex+1,inEnd,posStart+inIndex-inStart,posEnd-1,inOrder,postOrder);

        return root;
    }
}
